from datetime import datetime
import requests
import urllib3
import socket
import time
import sys
import os

urllib3.disable_warnings()
sys.stdout.flush()

class Log():

    def __init__(self,config=None):
        #Initial configs
        self.description = 'Gerar relatório ITSM Funcionários'
        self.script_name = 'ipa-app-rel-func-itsm'
        self.hostname = socket.gethostname()
        self.config = config
    
    def send_elk_log_execution(self,success,error_code,service_user):
        try:

            """ Envio para o Dashboard de Execuções.
            As definições de quais informações serão enviadas fica a cargo do PO responsável, 
            é devem ser consultadas diretamente na documentação referente ao projeto. """

            headers = {'Content-Type': 'application/json'}
            datainput = {
                "hostname": self.hostname,
                "scriptname": self.script_name,
                "who_i_am": 'Python',
                "do_what": self.description,
                "success": str(success),
                "add_info": '',
                "unique_id": self.script_name,
                "version": 'v1.0.0',
                "error_code": str(error_code),
                "torre": 'IPA',
                "friendlyname": self.description,
                "target": 'IPA',    
                "environment": 'PRD',
                "type": 'Agendado',
                "user": str(service_user.decode('utf-8'))
            }
            request = requests.post(url=self.config.get_url_dash,headers=headers,json=datainput,verify=False,timeout=5)
            self.send_sgl_log('Status de envio Dash: ' + str(request.status_code),'Executando','Sucesso')      
            if not request.ok: self.send_sgl_log('Mensagem de erro Dash: ' + str(request.text),'Executando','Falha')    
        except Exception as error:
            message = 'Falha na linha: ' + str(format(sys.exc_info()[-1].tb_lineno)) + ' | Descricao: ' + str(error)
            self.send_sgl_log(message,'Executando','Falha')
        finally:
            return True
        
    def send_sgl_log(self,log_message,log_state,log_status):
        try:
            
            """ Envio de logs para o SGL.
            As definições de quais informações serão enviadas fica a cargo do desenvolvedor responsável, 
            considerando sempre facilitar o posterior suporte. """
            
            current_day = datetime.now()
            headers = {'Content-Type': 'application/json'}
            datainput = {
                "aplicacao": 'IPA',
                "servico": 'gerar-relatorio-itsm-func',
                "metodo": 'monitor-gerar-relatorio-itsm-func',
                "tsDataLog": str(round(time.time() * 1000)),
                "key1": 'PRO',
                "key2": str(current_day.strftime('%Y-%m-%d')),
                "key3": str(current_day.strftime('%H:%M:%S')),
                "conteudo": {
                        "id_exec": os.environ.get('id'),
                        "state": log_state,
                        "status": log_status,
                        "message": log_message
                    }
            }
            request = requests.post(url=self.config.get_url_logs,headers=headers,json=datainput,verify=False,timeout=5)
            if not request.ok: print('\nData: ' + datetime.today().strftime('%d/%m/%Y - %H:%M') + ' | Mensagem de erro log: ' + str(request.text),flush=True)
        except Exception as error:
            print('\nData: ' + datetime.today().strftime('%d/%m/%Y - %H:%M') + ' | ' + str(error),flush=True)
        finally:
            print('\nData: ' + datetime.today().strftime('%d/%m/%Y - %H:%M') + ' | ' + log_message,flush=True)
            return True
